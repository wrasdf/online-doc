"""Add EditSession and Change models for real-time collaboration

Revision ID: 399e38e0fd8a
Revises: edf1281af45a
Create Date: 2025-10-18 21:54:02.808918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '399e38e0fd8a'
down_revision: Union[str, Sequence[str], None] = 'edf1281af45a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('documents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_title'), 'documents', ['title'], unique=False)
    op.create_table('changes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('operation_type', sa.Enum('INSERT', 'DELETE', 'UPDATE', name='operationtype'), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('yjs_update', sa.LargeBinary(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint("(operation_type != 'delete') OR (length > 0)", name='delete_has_length'),
    sa.CheckConstraint("(operation_type != 'insert') OR (content IS NOT NULL)", name='insert_has_content'),
    sa.CheckConstraint('position >= 0', name='valid_position'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_changes_id'), 'changes', ['id'], unique=False)
    op.create_table('document_access',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('access_type', sa.String(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('granted_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('edit_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('cursor_position', sa.Integer(), nullable=True),
    sa.Column('cursor_color', sa.String(length=7), nullable=False),
    sa.Column('connection_status', sa.Enum('CONNECTED', 'IDLE', 'DISCONNECTED', name='connectionstatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('websocket_id', sa.String(length=255), nullable=True),
    sa.CheckConstraint('cursor_position >= 0 OR cursor_position IS NULL', name='valid_cursor_position'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_edit_sessions_id'), 'edit_sessions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_edit_sessions_id'), table_name='edit_sessions')
    op.drop_table('edit_sessions')
    op.drop_table('document_access')
    op.drop_index(op.f('ix_changes_id'), table_name='changes')
    op.drop_table('changes')
    op.drop_index(op.f('ix_documents_title'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
